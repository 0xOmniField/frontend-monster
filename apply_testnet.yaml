---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: frontend-monster
  name: frontend-monster
  namespace: default
  resourceVersion: '3817000'
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/name: frontend-monster
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s.kuboard.cn/name: frontend-monster
    spec:
      containers:
        - image: >-
            registry.eu-central-1.aliyuncs.com/omnifiled/frontend-monster:{{IMAGE_VERSION}}
          imagePullPolicy: IfNotPresent
          name: frontend-monster
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: ali-deguo-hub
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: frontend-monster
  name: frontend-monster
  namespace: default
  resourceVersion: '3824370'
spec:
  clusterIP: 10.43.75.97
  clusterIPs:
    - 10.43.75.97
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
  publishNotReadyAddresses: true
  selector:
    k8s.kuboard.cn/name: frontend-monster
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: frontend-monster
  name: frontend-monster
  namespace: default
  resourceVersion: '3824372'
spec:
  defaultBackend:
    service:
      name: frontend-monster
      port:
        number: 3000
  ingressClassName: nginx
  rules:
    - host: monster.omnifield.xyz
      http:
        paths:
          - backend:
              service:
                name: frontend-monster
                port:
                  number: 3000
            path: /
            pathType: Prefix

